#pragma once

#include <core/typedefs.h>

namespace bones
{
  enum class Key : u8
  {
    None         = 0,
    // 1-9
    Tab          = '\t',
    Return       = '\n',
    // 11-12
    Backspace    = '\r',
    // 14-26
    Escape       = 27,
    // 28-31
    Space        = ' ',
    // Exclamation  = '!',
    // Quotation    = '"',
    // Number       = '#',
    // Dollar       = '$',
    // Percent      = '%',
    // Ampersand    = '&',
    Apostrophe   = '\'',
    // LeftParen    = '(',
    // RightParen   = ')',
    // Asterisk     = '*',
    // Plus         = '+',
    Comma        = ',',
    Minus        = '-',
    Period       = '.',
    Slash        = '/',
    D0           = '0',
    D1           = '1',
    D2           = '2',
    D3           = '3',
    D4           = '4',
    D5           = '5',
    D6           = '6',
    D7           = '7',
    D8           = '8',
    D9           = '9',
    // Colon        = ':',
    Semicolon    = ';',
    // Lt           = '<',
    Equals       = '=',
    // Gt           = '>',   
    // Quest        = '?',
    // CommAt       = '@',
    // 65-90 (caps alphabet)
    LeftBracket  = '[',
    Backslash    = '\\',
    RightBracket = ']',
    // Caret        = '^',
    // Underscore   = '_',
    Grave        = '`',
    A            = 'a',
    B            = 'b',
    C            = 'c',
    D            = 'd',
    E            = 'e',
    F            = 'f',
    G            = 'g',
    H            = 'h',
    I            = 'i',
    J            = 'j',
    K            = 'k',
    L            = 'l',
    M            = 'm',
    N            = 'n',
    O            = 'o',
    P            = 'p',
    Q            = 'q',
    R            = 'r',
    S            = 's',
    T            = 't',
    U            = 'u',
    V            = 'v',
    W            = 'w',
    X            = 'x',
    Y            = 'y',
    Z            = 'z',
    // LeftBrace    = '{',
    // Vert         = '|',
    // RightBrace   = '}',
    // Tilde        = '~',
    Delete       = 127,

    F1           = 128,
    F2           = 129,
    F3           = 130,
    F4           = 131,
    F5           = 132,
    F6           = 133,
    F7           = 134,
    F8           = 135,
    F9           = 136,
    F10          = 137,
    F11          = 138,
    F12          = 139,
    F13          = 140,
    F14          = 141,
    F15          = 142,
    F16          = 143,
    F17          = 144,
    F18          = 145,
    F19          = 146,
    F20          = 147,
    F21          = 148,
    F22          = 149,
    F23          = 150,
    F24          = 151,
    
    CapsLock     = 152,
    NumLock      = 153,
    ScrollLock   = 154,

    PrintScreen  = 155,
    Pause        = 156,
    Insert       = 157,

    Home         = 158,
    End          = 159,
    PageUp       = 160,
    PageDown     = 161,

    Right        = 162,
    Left         = 163,
    Down         = 164,
    Up           = 165,

    KP1          = 166,
    KP2          = 167,
    KP3          = 168,
    KP4          = 169,
    KP5          = 170,
    KP6          = 171,
    KP7          = 172,
    KP8          = 173,
    KP9          = 174,
    KP0          = 175,
    KPAdd        = 176,
    KPSubtract   = 177,
    KPMultiply   = 178,
    KPDivide     = 179,
    KPDecimal    = 180,
    KPEquals     = 181,
    KPEnter      = 182,

    Shift        = 183,
    LShift       = 184,
    RShift       = 185,

    Ctrl         = 186,
    LCtrl        = 187,
    RCtrl        = 188,

    Alt          = 189,
    LAlt         = 190,
    RAlt         = 191,

    Gui          = 192,
    LGui         = 193,
    RGui         = 194,
    Application  = 195
  };

  enum class AltKey : u8
  {
    None        = 0,
    Exclamation = '!',
    Quotation   = '"',
    Number      = '#',
    Dollar      = '$',
    Percent     = '%',
    Ampersand   = '&',

    LeftParen   = '(',
    RightParen  = ')',
    Asterisk    = '*',
    Plus        = '+',

    Colon       = ':',

    Lt          = '<',

    Gt          = '>',   
    Quest       = '?',
    CommAt      = '@',

    A           = 'A',
    B           = 'B',
    C           = 'C',
    D           = 'D',
    E           = 'E',
    F           = 'F',
    G           = 'G',
    H           = 'H',
    I           = 'I',
    J           = 'J',
    K           = 'K',
    L           = 'L',
    M           = 'M',
    N           = 'N',
    O           = 'O',
    P           = 'P',
    Q           = 'Q',
    R           = 'R',
    S           = 'S',
    T           = 'T',
    U           = 'U',
    V           = 'V',
    W           = 'W',
    X           = 'X',
    Y           = 'Y',
    Z           = 'Z',

    Caret       = '^',
    Underscore  = '_',
    Grave       = '`',

    LeftBrace   = '{',
    Vert        = '|',
    RightBrace  = '}',
    Tilde       = '~'
  };

  enum class KeyMod : u16
  {
    None   = (0 << 0),

    LShift = (1 << 1),
    RShift = (1 << 2),
    LCtrl  = (1 << 3),
    RCtrl  = (1 << 4),
    LAlt   = (1 << 5),
    RAlt   = (1 << 6),
    LGui   = (1 << 7),
    RGui   = (1 << 8),
    Num    = (1 << 9),
    Caps   = (1 << 10),
    AltGr  = (1 << 11),

    Shift  = LShift | RShift,
    Ctrl   = LCtrl | RCtrl,
    Alt    = LAlt | RAlt,
    Gui    = LGui | RGui
  };

  // add bitwise operator overloading
}